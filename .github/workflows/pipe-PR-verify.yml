# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    types: [ opened, synchronize, reopened ]

jobs:
  app:
    name: Builder App
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B clean verify -DskipTests

      - name: Set Environments
        run: |
          echo "MARIADB_URL=${{ secrets.MARIADB_URL }}" >> $GITHUB_ENV
          echo "MARIADB_USER=${{ secrets.MARIADB_USER }}" >> $GITHUB_ENV
          echo "MARIADB_PASS=${{ secrets.MARIADB_PASS }}" >> $GITHUB_ENV
          echo "MAIL_USER=${{ secrets.MAIL_USER }}" >> $GITHUB_ENV
          echo "MAIL_PASS=${{ secrets.MAIL_PASS }}" >> $GITHUB_ENV

      - name: Run tests
        run: mvn test

  sonar:
    name: Run Sonar Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: SonarQube Scan
        run: ./mvnw -B verify sonar:sonar -Dsonar.projectKey=$SONAR_KEY -Dsonar.organization=$SONAR_ORGANIZATION -Dsonar.host.url=~$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
          SONAR_KEY: ${{ secrets.SONAR_KEY }}

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [ app, sonar ]
    steps:

      - name: Login to DockerHub
        uses: docker/login-action@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/spring3-security-jwt:latest
          build-args: |
            PROFILE=dev
