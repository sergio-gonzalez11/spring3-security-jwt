# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  app:
    name: Builder App
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B clean install -DskipTests --file pom.xml

      - name: Set Enviroments
        run: |
          echo "MARIADB_URL=${{ secrets.MARIADB_URL }}" >> $GITHUB_ENV
          echo "MARIADB_USER=${{ secrets.MARIADB_USER }}" >> $GITHUB_ENV
          echo "MARIADB_PASS=${{ secrets.MARIADB_PASS }}" >> $GITHUB_ENV
          echo "MAIL_USER=${{ secrets.MAIL_USER }}" >> $GITHUB_ENV
          echo "MAIL_PASS=${{ secrets.MAIL_PASS }}" >> $GITHUB_ENV

      - name: Run tests
        run: mvn test


#  sonar:
#    name: Run Sonar Analysis
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: SonarQube Scan
#        uses: sonarsource/sonarcloud-github-action@master
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar


  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [ app ]
    steps:

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract project version
        id: extract_version
        run: |
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          file: /Dockerfile
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/spring3-security-jwt:latest
            ${{ secrets.DOCKER_USERNAME }}/spring3-security-jwt:${{ steps.extract_version.outputs.VERSION }}
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
